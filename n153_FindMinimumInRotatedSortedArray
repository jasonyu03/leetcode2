class Solution {
public:
    int findMin(vector<int>& nums) {
        int nSize = nums.size();
        
        if(nSize == 1) {
            return nums[0];
        }
        if(nSize == 2) {
            return min(nums[0], nums[1]);
        }
        
        if(nums[0] < nums[1] && nums[0] < nums[nSize - 1]) {
            return nums[0];
        }
        if(nums[nSize - 1] < nums[nSize - 2] && nums[nSize - 1] < nums[0]) {
            return nums[nSize - 1];
        }
        
        int low = 0;
        int high = nSize - 1;
        int mid;
        while(low < high) {
            mid = (low + high)/2;
            if(nums[mid] < nums[mid - 1] && nums[mid] < nums[mid + 1]) {
                return nums[mid];
            }
            else if(nums[mid] > nums[low]) {
                low = mid;
            }
            else {
                high = mid;
            }
        }
        
        return nums[low];
    }
};
