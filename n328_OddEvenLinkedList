/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head || !head->next) {
            return head;
        }

        ListNode* fakeHeadOdd = new ListNode(-1);
        ListNode* fakeHeadEven = new ListNode(-1);
        
        ListNode* ptr_c = head;
        ListNode* ptr_o = fakeHeadOdd;
        ListNode* ptr_e = fakeHeadEven;
        int flag = 0;
        
        while(ptr_c) {
            if(flag == 0) {
                ptr_o->next = new ListNode(ptr_c->val);
                ptr_o = ptr_o->next;
                flag = 1;
            }
            else {
                ptr_e->next = new ListNode(ptr_c->val);
                ptr_e = ptr_e->next;
                flag = 0;
            }
            ptr_c = ptr_c->next;
        }

        ptr_o->next = fakeHeadEven->next;
        return fakeHeadOdd->next;
        
    }
};
