class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        vector<int> rest;
        unordered_map<int, int> myMap;

        for(int i = 0; i < nums1.size(); i++) {
            unordered_map<int, int>::iterator itr = myMap.find(nums1[i]);
            if(itr == myMap.end()) {
                myMap.insert({nums1[i],1});
            }
            else {
                itr->second = itr->second + 1;
            }
        }
        
        for(int i = 0; i < nums2.size(); i++) {
            unordered_map<int, int>::iterator itr = myMap.find(nums2[i]);
            if(itr != myMap.end()) {
                rest.push_back(nums2[i]);
                itr->second = itr->second - 1;
                if(!itr->second) {
                    myMap.erase(nums2[i]);
                }
            }
        }        
        
        return rest;
        
    }
};
